[workspace]

[workspace.package]
version = "0.1.0"
edition = "2024"

[workspace.dependencies]
anyhow = "1.0"
reqwest = { version = "0.12.9", default-features = false, features = [
  "deflate",
  "http2",
  "json",
  "rustls-tls-webpki-roots-no-provider",
] }
rustls = { version = "0.23.23", default-features = false, features = [
  "aws_lc_rs",
] }
serde = { version = "1.0.210", features = ["derive"] }
serde_json = "1.0.128"
serde_yaml = "0.9.34"
tokio = { version = "1.38.1", features = [
  "macros",
  "net",
  "rt-multi-thread",
  "signal",
  "sync",
] }

[package]
name = "archodex-agent"
version.workspace = true
edition.workspace = true
resolver = "3"

[build-dependencies]
anyhow.workspace = true
dotenvy = "0.15.7"
git2 = { version = "0.20.0", default-features = false }
libbpf-cargo = "0.24.2"
prost-build = "0.13.4"
reqwest.workspace = true
rustls.workspace = true
semver = "1.0.26"
serde.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
tokio.workspace = true

[dependencies]
anyhow.workspace = true
libbpf-rs = { version = "0.24.8", features = ["static"] }
libc = "0.2"
plain = "0.2"
time = { version = "0.3", features = ["formatting", "local-offset", "macros"] }
clap = { version = "4.0.32", default-features = false, features = [
  "color",
  "env",
  "std",
  "derive",
  "help",
  "usage",
] }
clap-markdown = "0.1.5"
nix = { version = "0.29.0", default-features = false, features = [
  "event",
  "ptrace",
] }
elf = { version = "0.7.4", default-features = false, features = ["std"] }
tokio.workspace = true
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
procfs = { version = "0.16.0", default-features = false }
syscalls = { version = "0.6.18", default-features = false, features = ["std"] }
regex = "1.10.6"
hpack = "0.3.0"
httparse = "1.9.4"
http = "1.1.0"
path-tree = "0.8.1"
jsonpath-rust = "1.0.1"
serde_json.workspace = true
serde.workspace = true
serde_yaml.workspace = true
chrono = { version = "0.4.38", default-features = false, features = [
  "now",
  "serde",
  "std",
] }
kube = { version = "0.96.0", default-features = false, features = [
  "aws-lc-rs",
  "client",
  "config",
  "rustls-tls",
] }
k8s-openapi = { version = "0.23.0", features = [
  "latest",
], default-features = false }
kube-runtime = { version = "0.96.0", default-features = false }
futures = { version = "0.3.31", default-features = false, features = ["std"] }
reqwest.workspace = true
base64 = "0.22.1"
colored = "2.2.0"
prost = "0.13.4"
rustls.workspace = true
include_dir = "0.7.4"
url = "2.5.4"
sha2 = "0.10.8"
getrandom = "0.3.2"
minijinja = { version = "2.9.0", default-features = false, features = [
  "custom_syntax",
  "serde",
  "std_collections",
] }
hex = "0.4.3"
octocrab = "0.44"

[target.'cfg(target_arch = "x86_64")'.dependencies]
llvm-sys = { version = "181.2.0", features = ["force-static"] }

[profile.release]
opt-level = "z"
lto = true
codegen-units = 1

[patch.crates-io]
llvm-sys = { git = "https://github.com/txase/llvm-sys.rs", tag = "v181.2.0-archodex" }
